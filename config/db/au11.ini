dbtype = zip
rowtype = python
survey_joins = "orig_reminders_au11[USING (SurveyCode)]",
# intake_joins = "orig_vaccin_au11[USING (ParticipantId)]", "orig_h1n1_au11[USING (ParticipantId)]",
intake_joins = "orig_vaccin_au11[ON orig_vaccin_au11.ParticipantId = orig_intake_au11.ParticipantId AND orig_vaccin_au11.VaccinationYear = 2011]",
# , orig_h1n1_au11[ON orig_h1n1_au11.ParticipantId = orig_intake_au11.ParticipantId AND orig_h1n1_au11.VaccinationYear = 2011]"

[intake]
    uid = orig_intake_au11.ParticipantID
    q300 = "str_to_date(concat(BirthYear, '-', BirthMonth, '-01'), '%Y-%m-%d')"

    q200_1 = Gender__1
    q200_2 = Gender__2

    q700_1 = Vaccinated__1
    q700_2 = Vaccinated__2
#     q700_1 = orig_vaccin_au11.Vaccinated__1
#     q700_2 = orig_vaccin_au11.Vaccinated__2
#     q730_1 = orig_h1n1_au11.Vaccinated__1
#     q730_2 = orig_h1n1_au11.Vaccinated__2

[survey]
    sid = SurveyID
    uid = ParticipantID
#     sdate = "str_to_date(SurveyDate, '%d/%m/%Y %H:%s ')"
    sdate = "IF(SurveyDate REGEXP '^[0-9]{1,2}/[0-9]{1,2}/[0-9]{4}', STR_TO_DATE(SUBSTR(SurveyDate, 1, 10), '%d/%m/%Y'), NULL)"
    # s110 = SurveyCode
    s110 = "IF(SurveyWeek REGEXP '^[0-9]{8}', STR_TO_DATE(SUBSTR(SurveyWeek, 1, 8), '%Y%m%d'), NULL)"
    s100_18 = HadFever__1
    s100_2 = HadCough__1
    s100_3 = HadSoreThroat__1
    s400_1 = WasAbsent
    s410 = DaysCount
    # s300_1 = SeekMedic__(ELG...)
    s310 = MedicText

# [python]
#     SurveyCode = """year = {0} % 10000
# week = ({0} - year) // 10000
# value = iap.tools.year_week_to_date(year, week)
# """
